# vim:fdm=marker

# remap prefix from 'C-b' to 'C-a'

set -g prefix C-a
bind-key C-a send-prefix

# 256 color
set -g default-terminal "xterm-256color"

# truecolor
set -ga terminal-overrides ",*256color:Tc"

# undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# underscore colors, >=tmux-3.0
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# maximum number of lines held in window history
set -g history-limit 100000

# enable mouse
set -g mouse on

# faster escape sequences (default is 500ms).
# https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set -sg escape-time 10

# allow the arrow key to be used immediately after changing windows
set -g repeat-time 0

# start window numbers at 1
set -g base-index 1

# start pane indexing at 1
setw -g pane-base-index 1

# rebind 'clear screen' to <prefix>+c-l
bind C-l send-keys 'C-l'

# reload config
bind R source-file ~/.tmux.conf \;  display "Config Reloaded!"

# tmux-sessionizer
bind -r f run-shell "tmux neww ~/.local/scripts/tmux-sessionizer"

# kill current window
bind X kill-window

# rebind spit and new-window commands to use current path
bind \\ split-window -h # default home directory: prefix %
bind - split-window -v # default home directory: prefix "

# split window below under current pane path
bind b split-window -v -p 30 -c "#{pane_current_path}"

# split window right under current pane path
bind v split-window -h -p 66 -c "#{pane_current_path}"
bind r split-window -h -p 50 -c "#{pane_current_path}"

# Vim like switch pane, default: prefix <arrow key>
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# Vim like resize pane, default: prefix ctrl+<arrow key>
bind Up resize-pane -U 5
bind Down resize-pane -D 5
bind Left resize-pane -L 5
bind Right resize-pane -R 5

# move current pane up, default: prefix {
# move current pane down, default: prefix }

# copy mode operations to vi key bindings
setw -g mode-keys vi

# setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send-keys -X begin-selection
# setup 'y' to copy selection as in Vim
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
