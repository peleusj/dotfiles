# vim:fdm=marker

# {{{ Basic 

# TERM
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256color:Tc"

# Enable mouse support
set -g mouse on

# Maximum number of lines held in window history
set -g history-limit 100000

## Basic }}}

# {{{ Window

# Start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# https://superuser.com/questions/1098077/how-to-keep-terminal-window-title-in-sync-with-tmux-window
set -g set-titles on
set -g set-titles-string '#T'

# Start pane indexing at 1 for tmuxinator
setw -g pane-base-index 1
# Window}}}

## {{{ Performance 

# Faster escape sequences (default is 500ms).
# This helps when exiting insert mode in Vim
# https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set -sg escape-time 10

# undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# underscore colours, >=tmux-3.0
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

set -g focus-events on

# Performance }}}

## {{{ Key Bindings 

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Prefix key
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# Rebind 'clear screen' to <prefix>+c-l
bind C-l send-keys 'C-l'

# Configuration reloading
bind R source-file ~/.tmux.conf \;  display "Config Reloaded!"

# Switch or create new tmux session
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

# Kill current window
bind X kill-window

# Rebind spit and new-window commands to use current path
bind \\ split-window -h # default home directory: prefix %
bind - split-window -v # default home directory: prefix "

# Split window below under current pane path
bind b split-window -v -p 30 -c "#{pane_current_path}"

# Split window right under current pane path
bind v split-window -h -p 66 -c "#{pane_current_path}"
bind r split-window -h -p 50 -c "#{pane_current_path}"

# Vim like switch pane, default: prefix <arrow key>
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# Vim like resize pane, default: prefix ctrl+<arrow key>
bind Up resize-pane -U 5
bind Down resize-pane -D 5
bind Left resize-pane -L 5
bind Right resize-pane -R 5

# Move current pane up, default: prefix {
# Move current pane down, default: prefix }

# Enable Vi Copy Mode
setw -g mode-keys vi

# Copy mode has a separate set of commands which are passed using the -X flag to the send-keys command
# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send-keys -X begin-selection
# Setup 'y' to copy selection as in Vim
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Key Bindings }}} 
